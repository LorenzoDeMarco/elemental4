[gd_scene load_steps=46 format=2]

[ext_resource path="res://prefabs/ui/ElementSlot.tscn" type="PackedScene" id=1]
[ext_resource path="res://prefabs/ui/ElementsRoot.tscn" type="PackedScene" id=2]
[ext_resource path="res://prefabs/classicGame/InventoryDropzoneClassic.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/ui/arrow_white.png" type="Texture" id=4]
[ext_resource path="res://fonts/presets/Heading1.tres" type="DynamicFont" id=5]
[ext_resource path="res://fonts/equivalent/EQUIVALENT.ttf" type="DynamicFontData" id=6]
[ext_resource path="res://addons/shaderV/rgba/gradient4corners.gd" type="Script" id=7]
[ext_resource path="res://scripts/ui/ClassicGameHUD.gd" type="Script" id=8]
[ext_resource path="res://addons/shaderV/rgba/fireFX.gd" type="Script" id=9]
[ext_resource path="res://addons/shaderV/rgba/noise/simplex2d.gd" type="Script" id=10]
[ext_resource path="res://scripts/game/SellingLogic.gd" type="Script" id=11]
[ext_resource path="res://prefabs/ui/Button.tscn" type="PackedScene" id=12]
[ext_resource path="res://scripts/game/MixerLogic.gd" type="Script" id=13]
[ext_resource path="res://prefabs/ui/ElemShortInfoPanel.tscn" type="PackedScene" id=14]
[ext_resource path="res://assets/ui/icons/question-circle.png" type="Texture" id=15]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "NoiseColor"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "FireCoeff"

[sub_resource type="VisualShaderNodeCustom" id=3]
default_input_values = [ 1, Vector3( 0, 1, 0 ), 2, 0.3, 3, Vector3( 1, 1, 0 ), 4, 1.0, 5, Vector3( 1, 0.5, 0 ), 6, 1.0, 7, Vector3( 1, 0, 0 ), 8, 1.0, 9, 0, 10, 0.4, 11, 0.2, 12, 0.0 ]
script = ExtResource( 9 )

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "Speed"

[sub_resource type="VisualShaderNodeColorUniform" id=6]
uniform_name = "FireColor1"

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "FireColor2"

[sub_resource type="VisualShaderNodeCustom" id=8]
output_port_for_preview = 0
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5 ]
script = ExtResource( 10 )

[sub_resource type="VisualShaderNodeCustom" id=9]
default_input_values = [ 1, Vector3( 1, 1, 1 ), 2, 1.0, 3, Vector3( 1, 1, 1 ), 4, 1.0, 5, Vector3( 1, 1, 1 ), 6, 1.0, 7, Vector3( 1, 1, 1 ), 8, 1.0 ]
script = ExtResource( 7 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=10]

[sub_resource type="VisualShaderNodeVectorCompose" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "EarthCoeff"

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "WaterCoeff"

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "AirCoeff"

[sub_resource type="VisualShaderNodeColorConstant" id=16]
constant = Color( 0.245117, 0.139315, 0, 1 )

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorConstant" id=18]
constant = Color( 0.0804498, 0.166873, 0.518555, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=19]
constant = Color( 0, 0.876953, 1, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=23]
uniform_name = "NoiseCoeff"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=24]

[sub_resource type="VisualShaderNodeVectorCompose" id=25]

[sub_resource type="VisualShaderNodeInput" id=26]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=27]
default_input_values = [ 0, 0.0, 1, 8.0 ]
operator = 2

[sub_resource type="VisualShader" id=28]
code = "shader_type canvas_item;
uniform float AirCoeff;
uniform float WaterCoeff;
uniform float EarthCoeff;
uniform float Speed;
uniform float NoiseCoeff;
uniform vec4 FireColor1 : hint_color;
uniform vec4 FireColor2 : hint_color;
uniform float FireCoeff;


// Gradient4Corners

vec4 gradient4cornersFunc(vec2 _uv_c0rner, vec4 _top_left_c0rner, vec4 _top_right_c0rner, vec4 _bottom_left_c0rner, vec4 _bottom_right_c0rner){
	vec4 _c0l0r_t0p_c0rner = mix(_top_left_c0rner, _top_right_c0rner, _uv_c0rner.x);
	vec4 _c0l0r_b0tt0m_c0rner = mix(_bottom_left_c0rner, _bottom_right_c0rner, _uv_c0rner.x);
	return mix(_c0l0r_t0p_c0rner, _c0l0r_b0tt0m_c0rner, _uv_c0rner.y);
}

// SimplexNoise2D

vec3 _permute_simplex2_n0ise(vec3 x) {
	return ((x*34.0)+1.0)*x-floor(((x*34.0)+1.0)*x*(1.0/289.0))*289.0;
}

float simplex2dN0iseFunc(vec2 v) {
	vec4 C = vec4(0.211324865405187,
				0.366025403784439,
				-0.577350269189626,
				0.024390243902439);
	
	vec2 i  = floor(v + dot(v, C.yy) );
	vec2 x0 = v -   i + dot(i, C.xx);
	
	vec2 i1;
	i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);
	vec4 x12 = vec4(x0.xy, x0.xy) + C.xxzz;
	x12.xy -= i1;
	
	i = i - floor(i * (1.0 / 289.0)) * 289.0;
	vec3 p = _permute_simplex2_n0ise(_permute_simplex2_n0ise(i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0));
	
	vec3 m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), vec3(0.0));
	m = m * m;
	m = m * m;
	
	vec3 x = 2.0 * fract(p * C.www) - 1.0;
	vec3 h = abs(x) - 0.5;
	vec3 ox = floor(x + 0.5);
	vec3 a0 = x - ox;
	
	m *= 1.79284291400159 - 0.85373472095314 * (a0 * a0 + h * h);
	
	vec3 g;
	g.x  = a0.x  * x0.x  + h.x  * x0.y;
	g.yz = a0.yz * x12.xz + h.yz * x12.yw;
	return 130.0 * dot(m, g);
}

// FireFX

float cnoiseFireFXTempFunc(vec3 P) {
	vec3 Pi0 = floor(P);
	vec3 Pi1 = Pi0 + vec3(1.0);
	Pi0 = Pi0 - floor(Pi0 * (1.0 / 289.0)) * 289.0;
	Pi1 = Pi1 - floor(Pi1 * (1.0 / 289.0)) * 289.0;
	vec3 Pf0 = fract(P);
	vec3 Pf1 = Pf0 - vec3(1.0);
	vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
	vec4 iy = vec4(Pi0.yy, Pi1.yy);
	vec4 iz0 = vec4(Pi0.z);
	vec4 iz1 = vec4(Pi1.z);
	
	ix = ((ix*34.0)+1.0)*ix - floor(((ix*34.0)+1.0)*ix * (1.0 / 289.0)) * 289.0;
	vec4 ixy = (((ix + iy)*34.0)+1.0)*(ix + iy) - floor((((ix + iy)*34.0)+1.0)*(ix + iy) * (1.0 / 289.0)) * 289.0;
	vec4 ixy0 = (((ixy + iz0) * 34.0)+1.0)* (ixy + iz0) - floor((( (ixy + iz0) *34.0)+1.0)* (ixy + iz0) * (1.0 / 289.0)) * 289.0;
	vec4 ixy1 = (((ixy + iz1)*34.0)+1.0)*(ixy + iz1) - floor((((ixy + iz1)*34.0)+1.0)*(ixy + iz1) * (1.0 / 289.0)) * 289.0;
	
	vec4 gx0 = ixy0 * (1.0 / 7.0);
	vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
	gx0 = fract(gx0);
	vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
	vec4 sz0 = step(gz0, vec4(0.0));
	gx0 -= sz0 * (step(0.0, gx0) - 0.5);
	gy0 -= sz0 * (step(0.0, gy0) - 0.5);
	
	vec4 gx1 = ixy1 * (1.0 / 7.0);
	vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
	gx1 = fract(gx1);
	vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
	vec4 sz1 = step(gz1, vec4(0.0));
	gx1 -= sz1 * (step(0.0, gx1) - 0.5);
	gy1 -= sz1 * (step(0.0, gy1) - 0.5);
	
	vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
	vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
	vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
	vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
	vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
	vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
	vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
	vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);
	
	vec4 norm0 = 1.79284291400159 - 0.85373472095314 * vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110));
	g000 *= norm0.x;
	g010 *= norm0.y;
	g100 *= norm0.z;
	g110 *= norm0.w;
	vec4 norm1 = 1.79284291400159 - 0.85373472095314 * vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111));
	g001 *= norm1.x;
	g011 *= norm1.y;
	g101 *= norm1.z;
	g111 *= norm1.w;
	
	float n000 = dot(g000, Pf0);
	float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
	float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
	float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
	float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
	float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
	float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
	float n111 = dot(g111, Pf1);
	
	vec3 fade_xyz = Pf0 * Pf0 * Pf0 * (Pf0 * (Pf0 * 6.0 - 15.0) + 10.0);
	vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
	vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
	float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); 
	return 2.2 * n_xyz;
}
float perlingFbmFireFXTempFunc(vec2 _pos, float _octaves, float _intencity, float persistence, float _scale, float _time) {
	float final = 0.0;
	float amplitude = _intencity;
	for(float i = 0.0; i < _octaves; i++){
		final += cnoiseFireFXTempFunc(vec3(_pos * _scale, _time)) * amplitude;
		_scale *= 2.0;
		amplitude *= persistence;
	}
	return (min(final, 1.0) + 1.0) * 0.5;
}
vec4 fireFXFunc(vec2 _uv_fire, vec2 _dir_fire, float _speed_fire, float _time_fire,
	vec4 _col1_fire, vec4 _col2_fire, vec4 _col3_fire,
	float _col1_pos, float _col2_pos, float _col3_pos){
	float _x_pos = mix(0.0, 1.0, _uv_fire.y);
	_uv_fire.x -= _dir_fire.x * _time_fire * _speed_fire;
	_uv_fire.y += _dir_fire.y * _time_fire * _speed_fire;
	float _y_pos = perlingFbmFireFXTempFunc(_uv_fire, 8.0, 0.4, 1.0, 1.0, 1.0);
	float _1 = step(_y_pos, _x_pos - _col1_pos);
	float _3 = step(_y_pos, _x_pos - _col3_pos);
	float L1 = _1 - _3;
	vec4 col = vec4(1.0);
	col = mix(_col1_fire, _col3_fire, L1);
	
	float _2 = step(_y_pos, _x_pos - _col2_pos);
	float L2 = _3 - _2;
	col.rgb = mix(col.rgb, _col2_fire.rgb, L2);
	col = mix(vec4(0.0), col, _1);
	return col;
}


void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Color:31
	vec3 n_out31p0 = vec3(0.000000, 0.876953, 1.000000);
	float n_out31p1 = 1.000000;

// ScalarUniform:28
	float n_out28p0 = AirCoeff;

// VectorOp:34
	vec3 n_out34p0 = n_out31p0 * vec3(n_out28p0);

// Color:30
	vec3 n_out30p0 = vec3(0.080450, 0.166873, 0.518555);
	float n_out30p1 = 1.000000;

// ScalarUniform:27
	float n_out27p0 = WaterCoeff;

// VectorOp:33
	vec3 n_out33p0 = n_out30p0 * vec3(n_out27p0);

// Color:29
	vec3 n_out29p0 = vec3(0.245117, 0.139315, 0.000000);
	float n_out29p1 = 1.000000;

// ScalarUniform:26
	float n_out26p0 = EarthCoeff;

// VectorOp:32
	vec3 n_out32p0 = n_out29p0 * vec3(n_out26p0);

// Gradient4Corners:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_out2p0n_out2p1 = gradient4cornersFunc(n_out3p0.xy, vec4(n_out34p0, n_out31p1), vec4(n_out34p0, n_out31p1), vec4(n_out33p0, n_out30p1), vec4(n_out32p0, n_out29p1));
		n_out2p0 = n_out2p0n_out2p1.rgb;
		n_out2p1 = n_out2p0n_out2p1.a;
	}

// ScalarUniform:15
	float n_out15p0 = Speed;

// ScalarOp:14
	float n_in14p0 = 1.00000;
	float n_out14p0 = n_in14p0 / n_out15p0;

// Input:5
	float n_out5p0 = TIME;

// ScalarOp:7
	float n_out7p0 = n_out14p0 * n_out5p0;

// ScalarOp:25
	float n_in25p1 = 0.10000;
	float n_out25p0 = n_out7p0 * n_in25p1;

// VectorCompose:24
	float n_in24p1 = 0.00000;
	float n_in24p2 = 0.00000;
	vec3 n_out24p0 = vec3(n_out25p0, n_in24p1, n_in24p2);

// SimplexNoise2D:18
	float n_in18p2 = 5.00000;
	float n_out18p0;
	{
		n_out18p0 = simplex2dN0iseFunc((n_out3p0.xy+n_out24p0.xy)*n_in18p2);
	}

// VectorCompose:37
	vec3 n_out37p0 = vec3(n_out18p0, n_out18p0, n_out18p0);

// ScalarUniform:35
	float n_out35p0 = NoiseCoeff;

// VectorScalarMix:36
	vec3 n_out36p0 = mix(n_out2p0, n_out37p0, n_out35p0);

// ColorUniform:16
	vec3 n_out16p0 = FireColor1.rgb;
	float n_out16p1 = FireColor1.a;

// ColorUniform:17
	vec3 n_out17p0 = FireColor2.rgb;
	float n_out17p1 = FireColor2.a;

// FireFX:13
	vec3 n_in13p1 = vec3(0.00000, 1.00000, 0.00000);
	float n_in13p9 = 0.00000;
	float n_in13p10 = 0.40000;
	float n_in13p11 = 0.20000;
	vec3 n_out13p0;
	float n_out13p1;
	{
		vec4 n_out13p0n_out13p1 = fireFXFunc(n_out3p0.xy, n_in13p1.xy, n_out14p0, n_out7p0, vec4(n_out16p0, n_out17p1), vec4(n_out17p0, n_out16p1), vec4(n_out16p0, n_out16p1), n_in13p9, n_in13p10, n_in13p11);
		n_out13p0 = n_out13p0n_out13p1.rgb;
		n_out13p1 = n_out13p0n_out13p1.a;
	}

// ScalarUniform:11
	float n_out11p0 = FireCoeff;

// VectorScalarMix:21
	vec3 n_out21p0 = mix(n_out36p0, n_out13p0, n_out11p0);

// Output:0
	COLOR.rgb = n_out21p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -449.851, -579.22 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1080, -100 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( 520, 60 )
nodes/fragment/3/node = SubResource( 17 )
nodes/fragment/3/position = Vector2( -80, 60 )
nodes/fragment/5/node = SubResource( 26 )
nodes/fragment/5/position = Vector2( -80, 0 )
nodes/fragment/7/node = SubResource( 27 )
nodes/fragment/7/position = Vector2( 320, -20 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -20, 580 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -560, -200 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 520, -360 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 140, -100 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -80, -60 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( -80, -400 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( -80, -300 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 640, 340 )
nodes/fragment/21/node = SubResource( 10 )
nodes/fragment/21/position = Vector2( 820, -120 )
nodes/fragment/24/node = SubResource( 11 )
nodes/fragment/24/position = Vector2( 180, 460 )
nodes/fragment/25/node = SubResource( 12 )
nodes/fragment/25/position = Vector2( -20, 460 )
nodes/fragment/26/node = SubResource( 13 )
nodes/fragment/26/position = Vector2( -560, -120 )
nodes/fragment/27/node = SubResource( 14 )
nodes/fragment/27/position = Vector2( -560, -40 )
nodes/fragment/28/node = SubResource( 15 )
nodes/fragment/28/position = Vector2( -560, 40 )
nodes/fragment/29/node = SubResource( 16 )
nodes/fragment/29/position = Vector2( -560, 120 )
nodes/fragment/30/node = SubResource( 18 )
nodes/fragment/30/position = Vector2( -560, 220 )
nodes/fragment/31/node = SubResource( 19 )
nodes/fragment/31/position = Vector2( -560, 320 )
nodes/fragment/32/node = SubResource( 20 )
nodes/fragment/32/position = Vector2( -340, 120 )
nodes/fragment/33/node = SubResource( 21 )
nodes/fragment/33/position = Vector2( -340, 240 )
nodes/fragment/34/node = SubResource( 22 )
nodes/fragment/34/position = Vector2( -340, 360 )
nodes/fragment/35/node = SubResource( 23 )
nodes/fragment/35/position = Vector2( -20, 700 )
nodes/fragment/36/node = SubResource( 24 )
nodes/fragment/36/position = Vector2( 880, 60 )
nodes/fragment/37/node = SubResource( 25 )
nodes/fragment/37/position = Vector2( 860, 340 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 3, 0, 13, 0, 15, 0, 14, 1, 14, 0, 13, 2, 16, 0, 13, 3, 17, 0, 13, 5, 7, 0, 13, 12, 3, 0, 18, 0, 17, 1, 13, 4, 16, 1, 13, 6, 16, 0, 13, 7, 16, 1, 13, 8, 11, 0, 21, 2, 21, 0, 0, 0, 13, 0, 21, 1, 24, 0, 18, 1, 7, 0, 25, 0, 25, 0, 24, 0, 14, 0, 7, 0, 5, 0, 7, 1, 29, 0, 32, 0, 26, 0, 32, 1, 27, 0, 33, 1, 30, 0, 33, 0, 31, 0, 34, 0, 28, 0, 34, 1, 32, 0, 2, 7, 29, 1, 2, 8, 33, 0, 2, 5, 30, 1, 2, 6, 34, 0, 2, 3, 31, 1, 2, 4, 34, 0, 2, 1, 31, 1, 2, 2, 2, 0, 36, 0, 35, 0, 36, 2, 36, 0, 21, 0, 18, 0, 37, 0, 18, 0, 37, 2, 18, 0, 37, 1, 37, 0, 36, 1 )

[sub_resource type="ShaderMaterial" id=29]
shader = SubResource( 28 )
shader_param/AirCoeff = 1.0
shader_param/WaterCoeff = null
shader_param/EarthCoeff = null
shader_param/Speed = 8.0
shader_param/NoiseCoeff = 0.0
shader_param/FireColor1 = Color( 0.870588, 0.572549, 0, 1 )
shader_param/FireColor2 = Color( 0.929412, 0.305882, 0, 1 )
shader_param/FireCoeff = 0.05

[sub_resource type="DynamicFont" id=30]
size = 24
font_data = ExtResource( 6 )

[node name="ClassicGame" type="Panel"]
material = SubResource( 29 )
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 8 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="MixerLogic" type="Node" parent="."]
script = ExtResource( 13 )
mixer_slots = [ NodePath("../MixerDropzone/MixInputSlot1"), NodePath("../MixerDropzone/MixInputSlot2"), NodePath("../MixerDropzone/MixInputSlot3"), NodePath("../MixerDropzone/MixInputSlot4") ]
target_slot = NodePath("../MixerDropzone/MixResultSlot")
suggest_new_btn = NodePath("../MixerDropzone/MixResultSlot/SuggestNewBtn")
auto_duplicate = true

[node name="SellingLogic" type="Node" parent="."]
script = ExtResource( 11 )
slot = NodePath("../SellingDropzone/SellSlot")

[node name="Title" type="Label" parent="."]
margin_left = 7.0
margin_top = 8.0
margin_right = 440.0
margin_bottom = 79.0
custom_fonts/font = ExtResource( 5 )
text = "Classic Mode"
valign = 1
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="QADropzone" parent="." instance=ExtResource( 3 )]
anchor_right = 0.0
margin_left = 7.0
margin_top = 88.0
margin_right = 135.0
margin_bottom = -128.0
rect_min_size = Vector2( 128, 384 )
grid_snap = false

[node name="QALabel" type="Label" parent="QADropzone"]
anchor_top = 1.0
anchor_right = 0.083
anchor_bottom = 1.0
margin_right = 373.376
margin_bottom = 36.0
rect_rotation = -90.0
custom_fonts/font = SubResource( 30 )
custom_colors/font_color = Color( 0, 0, 0, 0.196078 )
text = "Quick access"
clip_text = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="QASlot1" parent="QADropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 33.0
margin_top = 32.0
margin_right = 97.0
margin_bottom = 96.0
allow_stack = true
is_input = true

[node name="QASlot2" parent="QADropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 33.0
margin_top = 104.0
margin_right = 97.0
margin_bottom = 168.0
allow_stack = true
is_input = true

[node name="QASlot3" parent="QADropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 33.0
margin_top = 176.0
margin_right = 97.0
margin_bottom = 240.0
allow_stack = true
is_input = true

[node name="QASlot4" parent="QADropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 33.0
margin_top = 248.0
margin_right = 97.0
margin_bottom = 312.0
allow_stack = true
is_input = true

[node name="QASlot5" parent="QADropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 33.0
margin_top = 320.0
margin_right = 97.0
margin_bottom = 384.0
allow_stack = true
is_input = true

[node name="InverterDropzone" parent="." instance=ExtResource( 3 )]
anchor_top = 1.0
anchor_right = 0.0
margin_left = 7.0
margin_top = -120.0
margin_right = 320.0
margin_bottom = -8.0
rect_min_size = Vector2( 296, 112 )
grid_snap = false

[node name="InverterLabel" type="Label" parent="InverterDropzone"]
anchor_right = 0.115
anchor_bottom = 1.0
margin_top = 112.0
margin_right = 76.005
margin_bottom = 36.0
rect_rotation = -90.0
custom_fonts/font = SubResource( 30 )
custom_colors/font_color = Color( 0, 0, 0, 0.196078 )
text = "Invert"
clip_text = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Arrow" type="NinePatchRect" parent="InverterDropzone"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = 113.0
margin_top = -8.0
margin_right = -112.0
margin_bottom = 9.0
texture = ExtResource( 4 )
patch_margin_top = 4
patch_margin_right = 11
patch_margin_bottom = 4
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="InvertInputSlot" parent="InverterDropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 33.0
margin_top = 24.0
margin_right = 97.0
margin_bottom = 88.0
is_input = true

[node name="InvertResultSlot" parent="InverterDropzone" instance=ExtResource( 1 )]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -96.0
margin_top = 24.0
margin_right = -32.0
margin_bottom = 88.0

[node name="SellingDropzone" parent="." instance=ExtResource( 3 )]
anchor_top = 1.0
anchor_right = 0.0
margin_left = 328.0
margin_top = -120.0
margin_right = 456.0
margin_bottom = -8.0
rect_min_size = Vector2( 110, 112 )
grid_snap = false

[node name="SellingLabel" type="Label" parent="SellingDropzone"]
anchor_top = 1.0
anchor_right = 0.083
anchor_bottom = 1.0
margin_right = 101.376
margin_bottom = 36.0
rect_rotation = -90.0
custom_fonts/font = SubResource( 30 )
custom_colors/font_color = Color( 0, 0, 0, 0.196078 )
text = "Sell"
clip_text = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="SellSlot" parent="SellingDropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 32.0
margin_top = -88.0
margin_right = 96.0
margin_bottom = -24.0
is_input = true

[node name="MixerDropzone" parent="." instance=ExtResource( 3 )]
anchor_top = 1.0
anchor_right = 0.0
margin_left = 464.0
margin_top = -120.0
margin_right = 952.0
margin_bottom = -8.0
rect_min_size = Vector2( 488, 112 )
grid_snap = false

[node name="MixInputSlot1" parent="MixerDropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 32.0
margin_top = 24.0
margin_right = 96.0
margin_bottom = 88.0
is_input = true

[node name="MixInputSlot2" parent="MixerDropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 104.0
margin_top = 24.0
margin_right = 168.0
margin_bottom = 88.0
is_input = true

[node name="MixInputSlot3" parent="MixerDropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 176.0
margin_top = 24.0
margin_right = 240.0
margin_bottom = 88.0
is_input = true

[node name="MixInputSlot4" parent="MixerDropzone" groups=[
"element_collectors",
] instance=ExtResource( 1 )]
margin_left = 248.0
margin_top = 24.0
margin_right = 312.0
margin_bottom = 88.0
is_input = true

[node name="MixResultSlot" parent="MixerDropzone" instance=ExtResource( 1 )]
margin_left = 392.0
margin_top = 24.0
margin_right = 456.0
margin_bottom = 88.0

[node name="SuggestNewBtn" type="TextureButton" parent="MixerDropzone/MixResultSlot"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 8.0
margin_right = -8.0
margin_bottom = -8.0
button_mask = 3
texture_normal = ExtResource( 15 )
expand = true
stretch_mode = 5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MixerLabel" type="Label" parent="MixerDropzone"]
anchor_right = 0.074
anchor_bottom = 1.0
margin_top = 112.0
margin_right = 75.888
margin_bottom = 36.0
rect_rotation = -90.0
custom_fonts/font = SubResource( 30 )
custom_colors/font_color = Color( 0, 0, 0, 0.196078 )
text = "Mix"
clip_text = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Arrow" type="NinePatchRect" parent="MixerDropzone"]
margin_left = 328.0
margin_top = 48.0
margin_right = 376.0
margin_bottom = 65.0
texture = ExtResource( 4 )
patch_margin_top = 4
patch_margin_right = 11
patch_margin_bottom = 4
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InventoryDropzone" parent="." groups=[
"element_collectors",
] instance=ExtResource( 3 )]
margin_left = 144.0
margin_top = 88.0
margin_right = -72.0
margin_bottom = -128.0
rect_min_size = Vector2( 808, 300 )
accept_drop = true
grid_size = Vector2( 68, 68 )

[node name="InventoryLabel" type="Label" parent="InventoryDropzone"]
anchor_top = 1.0
anchor_bottom = 1.0
margin_right = 864.0
margin_bottom = 36.0
rect_rotation = -90.0
custom_fonts/font = SubResource( 30 )
custom_colors/font_color = Color( 0, 0, 0, 0.196078 )
text = "Inventory"
clip_text = true
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="NoSFXBtn" parent="." instance=ExtResource( 12 )]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -64.0
margin_top = -64.0
margin_right = -8.0
margin_bottom = -8.0
toggle_mode = true
text = "No SFX"

[node name="PauseBtn" parent="." instance=ExtResource( 12 )]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -64.0
margin_top = -128.0
margin_right = -8.0
margin_bottom = -72.0
text = "Pause"

[node name="InfoPanel" parent="." instance=ExtResource( 14 )]
anchor_top = 1.0
margin_left = 960.0
margin_top = -120.0
margin_right = -72.0
margin_bottom = -8.0

[node name="ElementsCollector" parent="." instance=ExtResource( 2 )]
mouse_filter = 2
stacking_collectors_group = "element_collectors"

[node name="Tween" type="Tween" parent="."]
[connection signal="pressed" from="MixerDropzone/MixResultSlot/SuggestNewBtn" to="MixerLogic" method="_on_suggest_pressed"]
[connection signal="toggled" from="NoSFXBtn" to="." method="_on_nosfxbtn_toggled"]
[connection signal="pressed" from="PauseBtn" to="." method="_on_pause_pressed"]
