[gd_resource type="VisualShader" load_steps=14 format=2]

[ext_resource path="res://addons/shaderV/tools/sinTime.gd" type="Script" id=1]
[ext_resource path="res://addons/shaderV/rgba/gradient4corners.gd" type="Script" id=4]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "uv"

[sub_resource type="VisualShaderNodeCustom" id=2]
default_input_values = [ 1, Vector3( 1, 1, 1 ), 2, 1.0, 3, Vector3( 1, 1, 1 ), 4, 1.0, 5, Vector3( 1, 1, 1 ), 6, 1.0, 7, Vector3( 1, 1, 1 ), 8, 1.0 ]
script = ExtResource( 4 )

[sub_resource type="VisualShaderNodeScalarInterp" id=3]

[sub_resource type="VisualShaderNodeCustom" id=4]
default_input_values = [ 0, 1.0, 1, 1.0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0, 0.52549, 0.607843, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=7]
uniform_name = "Brightness"

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 12

[sub_resource type="VisualShaderNodeVectorScalarMix" id=9]

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0, 0.00921631, 0.589844, 1 )

[sub_resource type="VisualShaderNodeCustom" id=11]
default_input_values = [ 1, Vector3( 1, 1, 1 ), 2, 1.0, 3, Vector3( 1, 1, 1 ), 4, 1.0, 5, Vector3( 1, 1, 1 ), 6, 1.0, 7, Vector3( 1, 1, 1 ), 8, 1.0 ]
script = ExtResource( 4 )

[resource]
code = "shader_type canvas_item;
render_mode blend_disabled;

uniform vec3 Brightness;


// Gradient4Corners

vec4 gradient4cornersFunc(vec2 _uv_c0rner, vec4 _top_left_c0rner, vec4 _top_right_c0rner, vec4 _bottom_left_c0rner, vec4 _bottom_right_c0rner){
	vec4 _c0l0r_t0p_c0rner = mix(_top_left_c0rner, _top_right_c0rner, _uv_c0rner.x);
	vec4 _c0l0r_b0tt0m_c0rner = mix(_bottom_left_c0rner, _bottom_right_c0rner, _uv_c0rner.x);
	return mix(_c0l0r_t0p_c0rner, _c0l0r_b0tt0m_c0rner, _uv_c0rner.y);
}


void vertex() {
// Output:0

}

void fragment() {
// Input:10
	vec3 n_out10p0 = vec3(UV, 0.0);

// Color:2
	vec3 n_out2p0 = vec3(0.000000, 0.525490, 0.607843);
	float n_out2p1 = 1.000000;

// Color:7
	vec3 n_out7p0 = vec3(0.000000, 0.009216, 0.589844);
	float n_out7p1 = 1.000000;

// Gradient4Corners:9
	float n_in9p2 = 1.00000;
	float n_in9p4 = 1.00000;
	float n_in9p6 = 1.00000;
	float n_in9p8 = 1.00000;
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 n_out9p0n_out9p1 = gradient4cornersFunc(n_out10p0.xy, vec4(n_out2p0, n_in9p2), vec4(n_out7p0, n_in9p4), vec4(n_out7p0, n_in9p6), vec4(n_out2p0, n_in9p8));
		n_out9p0 = n_out9p0n_out9p1.rgb;
		n_out9p1 = n_out9p0n_out9p1.a;
	}

// Gradient4Corners:11
	float n_in11p2 = 1.00000;
	float n_in11p4 = 1.00000;
	float n_in11p6 = 1.00000;
	float n_in11p8 = 1.00000;
	vec3 n_out11p0;
	float n_out11p1;
	{
		vec4 n_out11p0n_out11p1 = gradient4cornersFunc(n_out10p0.xy, vec4(n_out7p0, n_in11p2), vec4(n_out2p0, n_in11p4), vec4(n_out2p0, n_in11p6), vec4(n_out7p0, n_in11p8));
		n_out11p0 = n_out11p0n_out11p1.rgb;
		n_out11p1 = n_out11p0n_out11p1.a;
	}

// SinTIME:13
	float n_in13p0 = 1.00000;
	float n_in13p1 = 1.00000;
	float n_out13p0;
	{
		n_out13p0 = n_in13p1 * sin(n_in13p0 * TIME);
	}

// ScalarFunc:5
	float n_out5p0 = abs(n_out13p0);

// VectorScalarMix:6
	vec3 n_out6p0 = mix(n_out9p0, n_out11p0, n_out5p0);

// VectorUniform:27
	vec3 n_out27p0 = Brightness;

// ColorOp:26
	vec3 n_out26p0 = min(n_out6p0, n_out27p0);

// ScalarMix:12
	float n_out12p0 = mix(n_out9p1, n_out11p1, n_out5p0);

// Output:0
	COLOR.rgb = n_out26p0;
	COLOR.a = n_out12p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 542, -119 )
mode = 1
modes/blend = 5
flags/light_only = false
nodes/vertex/0/position = Vector2( 580, 140 )
nodes/fragment/0/position = Vector2( 1700, 60 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -680, -400 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( 320, 140 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 620, -80 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( -680, -300 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -240, -400 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -580, 100 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -220, -120 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 620, 60 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 60, 60 )
nodes/fragment/26/node = SubResource( 6 )
nodes/fragment/26/position = Vector2( 1440, 60 )
nodes/fragment/27/node = SubResource( 7 )
nodes/fragment/27/position = Vector2( 1120, -40 )
nodes/fragment/connections = PoolIntArray( 2, 0, 9, 1, 9, 0, 6, 0, 2, 0, 9, 7, 7, 0, 9, 3, 7, 0, 9, 5, 11, 0, 6, 1, 9, 1, 12, 0, 11, 1, 12, 1, 2, 0, 11, 3, 2, 0, 11, 5, 7, 0, 11, 1, 7, 0, 11, 7, 13, 0, 5, 0, 5, 0, 6, 2, 5, 0, 12, 2, 10, 0, 9, 0, 10, 0, 11, 0, 26, 0, 0, 0, 27, 0, 26, 1, 12, 0, 0, 1, 6, 0, 26, 0 )
