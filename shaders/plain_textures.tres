[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=13]
uniform_name = "Normalmap"
texture_type = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=6]
uniform_name = "Albedo"
color_default = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=8]
uniform_name = "Normal"
color_default = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=11]
uniform_name = "NormalDepth"

[resource]
code = "shader_type canvas_item;
uniform sampler2D Albedo : hint_black;
uniform sampler2D Normal : hint_black;
uniform sampler2D Normalmap : hint_normal;
uniform float NormalDepth;



void vertex() {
// Output:0

}

void fragment() {
// Input:15
	vec3 n_out15p0 = vec3(UV, 0.0);

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Albedo, n_out15p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(Normal, n_out15p0.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// TextureUniform:16
	vec3 n_out16p0;
	float n_out16p1;
	{
		vec4 n_tex_read = texture(Normalmap, n_out15p0.xy);
		n_out16p0 = n_tex_read.rgb;
		n_out16p1 = n_tex_read.a;
	}

// ScalarUniform:7
	float n_out7p0 = NormalDepth;

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;
	NORMAL = n_out4p0;
	NORMALMAP = n_out16p0;
	NORMALMAP_DEPTH = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -50.9812, -52 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 880, 40 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( 160, 60 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( 160, 260 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( 160, -20 )
nodes/fragment/15/node = SubResource( 12 )
nodes/fragment/15/position = Vector2( 0, 120 )
nodes/fragment/16/node = SubResource( 13 )
nodes/fragment/16/position = Vector2( 560, 180 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 15, 0, 2, 0, 15, 0, 4, 0, 4, 0, 0, 2, 16, 0, 0, 3, 15, 0, 16, 0, 7, 0, 0, 4 )
