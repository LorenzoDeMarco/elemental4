[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

export var max_records: int = 15

enum FeedEventType {
	UserRegistered = 0
}

# Live Feed controller

func _ready():
	Globals.connect(\"internet_status_changed\", self, \"_on_inet_state_changed\", [], CONNECT_DEFERRED)
	_refresh_data()

func _add_event_record(e: Dictionary):
	var fe = preload(\"res://prefabs/ui/LiveFeedRecord.tscn\").instance()
	fe.subtitle = Utility.date_dict_to_readable( \\
		Utility.date_dict_from_ISO(e['timestamp'])
	)
	match int(e['event_type']):
		FeedEventType.UserRegistered:
			fe.title = e['event_data']['username'] + \" joined for the first time!\"
			fe.icon = preload(\"res://assets/ui/icons/user.png\")
		_: # Unsupported
			fe.title = \"**ERROR**\"
			fe.subtitle = \"\"
	if fe.title.length() > 36:
		fe.title = fe.title.substr(0, 33) + \"â€¦\"
	$VBoxContainer.add_child(fe)
	var cc = $VBoxContainer.get_child_count()
	while cc > max_records:
		$VBoxContainer.get_child(cc - 1) \\
			.queue_free()
		cc -= 1

func _on_data(resp: HTTPUtil.Response):
	if resp.response_code == HTTPClient.RESPONSE_OK:
		var jpr = JSON.parse(resp.body.get_string_from_utf8())
		if jpr.error != OK: return
		if typeof(jpr.result) == TYPE_ARRAY:
			for event in jpr.result:
				_add_event_record(event)

func _on_inet_state_changed(state: bool):
	if state: _refresh_data()

func _refresh_data():
	var dt_frame = OS.get_datetime_from_unix_time(OS.get_unix_time() - 600) # Last 10 minutes
	print(dt_frame)
	HTTPUtil.request(funcref(self, \"_on_data\"), HTTPClient.METHOD_GET, 
		Globals.get_primary_server() + \"/api/events/latest\",
		[\"Content-Type: application/json\"], \"\\\"%s\\\"\" % Utility.date_dict_to_ISO(dt_frame))
"

[node name="LiveFeed" type="ScrollContainer"]
anchor_bottom = 1.0
margin_right = 344.0
rect_min_size = Vector2( 488, 0 )
rect_clip_content = false
scroll_horizontal_enabled = false
script = SubResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="VBoxContainer" type="VBoxContainer" parent="."]
alignment = 1
